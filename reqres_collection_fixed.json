{
  "info": {
    "name": "Reqres API Tests",
    "_postman_id": "reqres-collection",
    "description": "API tests for Reqres.in endpoints with positive and negative cases",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "POST - Create User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"name\": \"{{name}}\", \"job\": \"{{job}}\"}"
        },
        "url": {
          "raw": "{{base_url}}/users",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {\n    pm.response.to.have.status(201);\n});\npm.test(\"Status message is Created\", function () {\n    pm.expect(pm.response.reason()).to.eql(\"Created\");\n});",
              "let jsonData = pm.response.json();",
              "pm.test('Name matches', function () { pm.expect(jsonData.name).to.eql(pm.environment.get('name')); });",
              "if (jsonData.id) { pm.environment.set('user_id', jsonData.id.toString()); }"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET - Single User",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/users/{{user_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "{{user_id}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\npm.test(\"Status message is OK\", function () {\n    pm.expect(pm.response.reason()).to.eql(\"OK\");\n});",
              "let jsonData = pm.response.json();",
              "pm.test('User ID matches', function () { pm.expect(jsonData.data.id.toString()).to.eql(pm.environment.get('user_id')); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET - List Users",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/users?page=2",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users"
          ],
          "query": [
            {
              "key": "page",
              "value": "2"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\npm.test(\"Status message is OK\", function () {\n    pm.expect(pm.response.reason()).to.eql(\"OK\");\n});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "PATCH - Update User",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"job\": \"Senior Developer\"}"
        },
        "url": {
          "raw": "{{base_url}}/users/{{user_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "{{user_id}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\npm.test(\"Status message is OK\", function () {\n    pm.expect(pm.response.reason()).to.eql(\"OK\");\n});",
              "let jsonData = pm.response.json();",
              "pm.test('Job updated', function () { pm.expect(jsonData.job).to.eql('Senior Developer'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "PUT - Update User",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"name\": \"{{name}}\", \"job\": \"Lead Developer\"}"
        },
        "url": {
          "raw": "{{base_url}}/users/{{user_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "{{user_id}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\npm.test(\"Status message is OK\", function () {\n    pm.expect(pm.response.reason()).to.eql(\"OK\");\n});",
              "let jsonData = pm.response.json();",
              "pm.test('Job updated', function () { pm.expect(jsonData.job).to.eql('Lead Developer'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "DELETE - Delete User",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "{{base_url}}/users/{{user_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "{{user_id}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "NEGATIVE - GET Invalid User",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/users/99999",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "99999"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {\n    pm.response.to.have.status(404);\n});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "NEGATIVE - Register Missing Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"email\": \"eve.holt@reqres.in\"}"
        },
        "url": {
          "raw": "{{base_url}}/register",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "register"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 400', function () { pm.response.to.have.status(400); });",
              "let jsonData = pm.response.json();",
              "pm.test('Error message is returned', function () { pm.expect(jsonData.error).to.eql('Missing password'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}